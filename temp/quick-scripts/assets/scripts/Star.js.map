{"version":3,"sources":["Star.js"],"names":["cc","Class","extends","Component","properties","pickRadius","onLoad","getPlayerDistance","playerPos","game","player","getCenterPos","dist","node","position","sub","mag","onPicked","spawnNewStar","gainScore","destroy","start","update","dt","opacityRatio","timer","starDuration","minOpacity","opacity","Math","floor"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACRC,UAASF,GAAGG,SADJ;;AAGRC,aAAY;AACXC,cAAY,CADD,CACI;AADJ,EAHJ;;AAOR;;AAEAC,OATQ,oBASC,CACR,CAVO;AAYRC,kBAZQ,+BAYY;AACnB;AACA,MAAIC,YAAY,KAAKC,IAAL,CAAUC,MAAV,CAAiBC,YAAjB,EAAhB;AACA;AACA,MAAIC,OAAO,KAAKC,IAAL,CAAUC,QAAV,CAAmBC,GAAnB,CAAuBP,SAAvB,EAAkCQ,GAAlC,EAAX;AACA,SAAOJ,IAAP;AACA,EAlBO;AAmBRK,SAnBQ,sBAmBG;AACV;AACA,OAAKR,IAAL,CAAUS,YAAV;AACA;AACA,OAAKT,IAAL,CAAUU,SAAV;AACA;AACA,OAAKN,IAAL,CAAUO,OAAV;AACA,EA1BO;AA4BRC,MA5BQ,mBA4BA,CAEP,CA9BO;AAgCRC,OAhCQ,kBAgCDC,EAhCC,EAgCG;AACV;AACA,MAAI,KAAKhB,iBAAL,KAA2B,KAAKF,UAApC,EAAgD;AAC/C;AACA,QAAKY,QAAL;AACA;AACA;AACD;AACA,MAAIO,eAAe,IAAI,KAAKf,IAAL,CAAUgB,KAAV,GAAkB,KAAKhB,IAAL,CAAUiB,YAAnD;AACA,MAAIC,aAAa,EAAjB;AACA,OAAKd,IAAL,CAAUe,OAAV,GAAoBD,aAAaE,KAAKC,KAAL,CAAWN,eAAe,GAAf,GAAqBG,UAAhC,CAAjC;AACA;AA3CO,CAAT","file":"Star.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n\textends: cc.Component,\r\n\r\n\tproperties: {\r\n\t\tpickRadius: 0, // 星星和主角之间的距离小于这个数值时，就会完成收集\r\n\t},\r\n\r\n\t// LIFE-CYCLE CALLBACKS:\r\n\r\n\tonLoad() {\r\n\t},\r\n\r\n\tgetPlayerDistance() {\r\n\t\t// var playerPos = this.game.player.getPosition();\r\n\t\tvar playerPos = this.game.player.getCenterPos();\r\n\t\t// 计算两点之间的距离\r\n\t\tvar dist = this.node.position.sub(playerPos).mag();\r\n\t\treturn dist;\r\n\t},\r\n\tonPicked() {\r\n\t\t// 当星星被收集 调用Game脚本中的接口，生成一个新的星星\r\n\t\tthis.game.spawnNewStar();\r\n\t\t// 获取得分\r\n\t\tthis.game.gainScore();\r\n\t\t// 销毁当前星星节点\r\n\t\tthis.node.destroy();\r\n\t},\r\n\r\n\tstart() {\r\n\r\n\t},\r\n\r\n\tupdate(dt) {\r\n\t\t// 每帧判断和player之间的距离 \r\n\t\tif (this.getPlayerDistance() < this.pickRadius) {\r\n\t\t\t// 调用收集行为\r\n\t\t\tthis.onPicked();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// 根据 Game 中的计时器更新星星的透明度\r\n\t\tvar opacityRatio = 1 - this.game.timer / this.game.starDuration;\r\n\t\tvar minOpacity = 50;\r\n\t\tthis.node.opacity = minOpacity + Math.floor(opacityRatio * 255 - minOpacity)\r\n\t},\r\n});\r\n"]}